@page "/mapa/cum-fum/{cumFumId:int}/courses"
@layout MapaLayout
@using MapaAndMaya.Services;
@using Microsoft.Extensions.Logging
@using MapaAndMaya.Services.Models
@using MapaAndMaya.Components.Areas.Mapa.Components;


@inject CourseOfCumFumService CourseService;
@inject CumFumService CumFumService;
@inject DialogService DialogService;
@inject NotificationService NotificationService;
@inject NavigationManager NavigationManager;
@inject ILogger<Courses> Logger;

<RadzenCard>
    <RadzenRow>
        <RadzenText Text="@($"Cursos del CUM-FUM ")" TextStyle="TextStyle.H4" TagName="TagName.H1"/>
    </RadzenRow>
    <RadzenRow >
        <RadzenColumn >
            <RadzenRow JustifyContent="JustifyContent.Start">
            </RadzenRow>
            <RadzenRow JustifyContent="JustifyContent.Start">
                <RadzenDropDown Style="width:300px" TValue="int" @bind-Value="CumFumId" Placeholder="Eliga un CUM-FUM" AllowFiltering="true"
                                Data="@(CumFums)" TextProperty="Name" ValueProperty="Id" InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Seleccione un Cum-Fum" } })"
                                Change="@Refresh"/>

            </RadzenRow>
        </RadzenColumn >
        <RadzenColumn >
            <RadzenRow JustifyContent="JustifyContent.End" AlignItems="AlignItems.End">
                <RadzenButton Icon="add_circle_outline" Text="Agregar" ButtonStyle="ButtonStyle.Primary" Click="@AddItem" class="my-3"/>
            </RadzenRow>
        </RadzenColumn>

    </RadzenRow>
</RadzenCard>


<RadzenDataGrid @ref=_grid Data="@ItemsCollection" TItem="CourseInCumFum" AllowPaging="true" AllowColumnResize="true" style="box-shadow: var(--rz-shadow-5);"
                PageSize="10" PagerHorizontalAlign="HorizontalAlign.Left" IsLoading="@_isLoading"
                ShowPagingSummary="true" PagingSummaryFormat="Página {0} de {1} <b>(total {2} columnas)</b>" PageSizeOptions="@(new int[] { 5, 10, 20, 30 })"
                AllowFiltering="true" FilterMode="FilterMode.Advanced" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                LogicalFilterOperator="LogicalFilterOperator.And" FilterPopupRenderMode="PopupRenderMode.OnDemand"
                AllowSorting="true" ExpandMode="DataGridExpandMode.Multiple"
                Density="Density.Compact">
    
    <EmptyTemplate>
        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">Nada que mostrar.</p>
    </EmptyTemplate>
    <Template Context="data">

        <GroupsTable Data="data"/>

    </Template>
    <Columns>

        <RadzenDataGridColumn TItem="CourseInCumFum" Property="Course.Degree.Name" Title="Carrera"/>
        <RadzenDataGridColumn TItem="CourseInCumFum" Property="Course.Modality.Name" Title="Modalidad" Sortable="true"/>
        <RadzenDataGridColumn TItem="CourseInCumFum" Property="Course.Degree.Faculty.Name" Title="Facultad" Sortable="true"/>
        <RadzenDataGridColumn TItem="CourseInCumFum" Property="Course.YearsNumber" Title="Duracion en años" Sortable="true"/>
        <RadzenDataGridColumn TItem="CourseInCumFum" Property="Enrollment" Title="Matrícula" Sortable="true">
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="CourseInCumFum" Context="data" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="80px">
            <Template Context="data">
                <RadzenButton Icon="delete_forever" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Size="ButtonSize.Medium"
                              Click="@(_ => DeleteItem(data))" @onclick:stopPropagation="true">
                </RadzenButton>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>


@code {

    private async Task ShowFormularyDialog(Action onSummit, string title, ICollection<Degree> degrees)
    {
        ICollection<Course> coursesOfDegree = new List<Course>();
        
        
        var result = await DialogService.OpenAsync(title, ds =>
                @<EditForm Model="@AddFormViewModel" OnValidSubmit="@onSummit">
                    <DataAnnotationsValidator/>
                    <div class="container-fluid">
                        <div class="row ">
                            <div class="col-md-6 pb-3">
                                <RadzenDropDown Style="width:300px" TValue="int"  Placeholder="Eliga una Carrera" AllowFiltering="true"
                                                Data="@(degrees)" TextProperty="Name" ValueProperty="Id" InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Seleccione una Carrera" } })"
                                                Change="@(( v) => { int id = (int) v;
            coursesOfDegree = degrees.First(e => e.Id == id).Courses; 
            DialogService.Refresh(); })"/>

                            </div>
                            <div class="col-md-6 pb-3">

                                <RadzenDropDown Style="width:300px" TValue="int" @bind-Value="AddFormViewModel.CourseId" Placeholder="Eliga una Modalidad" AllowFiltering="true"
                                                Data="@(coursesOfDegree)"  TextProperty="Modality.Name"  ValueProperty="Id" InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Seleccione una Modalidad" } })"
                                                />
                            </div>
                        </div>
                    </div>
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Right">
                        <RadzenButton ButtonType="ButtonType.Submit" Text="Guardar" Icon="save" class="me-1"/>
                        <RadzenButton Text="Cancelar" Icon="clear" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" class="me-1"/>
            </RadzenStack>
            </EditForm>
            , new DialogOptions { Width = $"{800}px" }
        );
    }

    private async Task BusyDialog(string message)
    {
        await DialogService.OpenAsync("", _ =>
            @<RadzenStack AlignItems="AlignItems.Center" Gap="2rem" Class="rz-p-12">
                <RadzenText TextStyle="TextStyle.H6" Text="@message"></RadzenText>
        </RadzenStack>, new DialogOptions { ShowTitle = false, Style = "min-height:auto;min-width:auto;width:auto", CloseDialogOnEsc = false });
    }

    private async void Refresh()
    {
        NavigationManager.NavigateTo($"/mapa/cum-fum/{CumFumId}/courses");
    }
    
     
}

