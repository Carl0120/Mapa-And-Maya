// <auto-generated />
using MapaAndMaya.Services.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MapaAndMaya.PostGresSql.Migrations.Migrations
{
    [DbContext(typeof(MapaAndMayaDbContext))]
    [Migration("20240505205636_AddCourseInCumFumentity")]
    partial class AddCourseInCumFumentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MapaAndMaya.Services.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DegreeId")
                        .HasColumnType("integer");

                    b.Property<int>("ModalityId")
                        .HasColumnType("integer");

                    b.Property<bool>("Universalized")
                        .HasColumnType("boolean");

                    b.Property<int>("YearsNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModalityId");

                    b.HasIndex("DegreeId", "ModalityId")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CourseInCumFum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<int>("CumFumId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CumFumId", "CourseId")
                        .IsUnique();

                    b.ToTable("CourseInCumFums");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CumFum", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CumFums");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccreditationStatus")
                        .HasColumnType("integer");

                    b.Property<int>("FacultyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AcademicCourse")
                        .HasColumnType("integer");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("integer");

                    b.Property<int>("CourseInCumFumId")
                        .HasColumnType("integer");

                    b.Property<int>("Enrollment")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourseInCumFumId");

                    b.HasIndex("AcademicYear", "CourseInCumFumId")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Modality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Modalities");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Course", b =>
                {
                    b.HasOne("MapaAndMaya.Services.Models.Degree", "Degree")
                        .WithMany("Courses")
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapaAndMaya.Services.Models.Modality", "Modality")
                        .WithMany("DegreeModes")
                        .HasForeignKey("ModalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degree");

                    b.Navigation("Modality");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CourseInCumFum", b =>
                {
                    b.HasOne("MapaAndMaya.Services.Models.Course", "Course")
                        .WithMany("CourseInCumFum")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MapaAndMaya.Services.Models.CumFum", "CumFum")
                        .WithMany("CourseInCumFum")
                        .HasForeignKey("CumFumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CumFum");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CumFum", b =>
                {
                    b.HasOne("MapaAndMaya.Services.Models.Town", "Town")
                        .WithOne("CumFum")
                        .HasForeignKey("MapaAndMaya.Services.Models.CumFum", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Degree", b =>
                {
                    b.HasOne("MapaAndMaya.Services.Models.Faculty", "Faculty")
                        .WithMany("Degrees")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Group", b =>
                {
                    b.HasOne("MapaAndMaya.Services.Models.CourseInCumFum", "CourseInCumFum")
                        .WithMany("Groups")
                        .HasForeignKey("CourseInCumFumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseInCumFum");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Course", b =>
                {
                    b.Navigation("CourseInCumFum");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CourseInCumFum", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.CumFum", b =>
                {
                    b.Navigation("CourseInCumFum");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Degree", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Faculty", b =>
                {
                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Modality", b =>
                {
                    b.Navigation("DegreeModes");
                });

            modelBuilder.Entity("MapaAndMaya.Services.Models.Town", b =>
                {
                    b.Navigation("CumFum");
                });
#pragma warning restore 612, 618
        }
    }
}
